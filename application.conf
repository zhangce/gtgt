deepdive {
  
  db.default: {
    driver: "org.postgresql.Driver"
    url: "jdbc:postgresql://localhost/deepdive_titles"
    user: "czhang"
    password: "bB19871121"
  }

  calibration: {
    holdout_fraction: 0.5
  }

  schema.variables:{
    #relations._per_children: Boolean
    #relations._per_parents : Boolean 
    #relations._per_city_of_death : Boolean 
    #relations._org_founded_by  : Boolean 
    relations._per_spouse  : Boolean 
    #relations._org_top_members_employees: Boolean
    #relations._per_member_of : Boolean
    #relations._org_subsidaries : Boolean
    #relations._org_parents : Boolean
    #relations._org_city_of_headquarters: Boolean 
    #relations._per_siblings : Boolean
    #relations._per_city_of_birth : Boolean
    #relations._per_stateorprovinces_of_residence: Boolean 
    #relations._per_employee_of : Boolean
    #relations._per_cities_of_residence : Boolean
    #relations._per_countries_of_residence : Boolean
    #relations._per_title : Boolean
    #relations._per_schools_attended : Boolean
  }

  relations: {}

  extraction.extractors: {

    load_relations: {
        output_relation: "relations"
        input: "SELECT 0"
        udf: "../gtgt/udf/load_relations.py"
        output_batch_size: 100000
    }
  }



  inference.factors: {

    _per_spouse1.input_query: "select * from relations;"
    _per_spouse1.function: "relations._per_children = Imply()"
    _per_spouse1.weight: "?(relations.feature1)"

    _per_spouse2.input_query: "select * from relations;"
    _per_spouse2.function: "relations._per_children = Imply()"
    _per_spouse2.weight: "?(relations.feature2)"

  }

  sampler.sampler_args: "-l 200 -s 10 -i 1000 -t 4 --diminish 0.95 --alpha 0.1"
  sampler.java_args = "-Xmx8g"

}






